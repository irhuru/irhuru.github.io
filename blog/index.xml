<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Irati Hurtado</title>
    <link>https://irhuru.github.io/blog/</link>
    <description>Recent content in Blog on Irati Hurtado</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jan 2021 18:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://irhuru.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using machine learning to build a dialect classifier</title>
      <link>https://irhuru.github.io/blog/dialect-classifier/</link>
      <pubDate>Sun, 17 Jan 2021 18:00:00 -0500</pubDate>
      
      <guid>https://irhuru.github.io/blog/dialect-classifier/</guid>
      <description>As a linguist, I have always been curious about how computers can make sense of texts that combine different languages or language varieties. Therefore, I decided to learn more about this and implemented a dialect classifier. That is, an algorithm that would take some text as input and would determine the language variety (or dialect) it represents. To find out how I did it, read this post or take a look at this Jupyter notebook with all the code!</description>
    </item>
    
    <item>
      <title>Using Amazon Mechanical Turk to conduct linguistic research</title>
      <link>https://irhuru.github.io/blog/amazon-mechanical-turk/</link>
      <pubDate>Tue, 10 Nov 2020 18:00:00 -0500</pubDate>
      
      <guid>https://irhuru.github.io/blog/amazon-mechanical-turk/</guid>
      <description>As a linguist, I often need to find speakers from a particular country or region to gather data on how they say something. However, it can sometimes be difficult to find a large group of speakers from a region you have never been to. In those cases, Amazon Mechanical Turk can come in handy. In this blog post, I explain how you can start using this awesome tool for your linguistic research!</description>
    </item>
    
    <item>
      <title>How to create stunning presentations using Reveal.js in R</title>
      <link>https://irhuru.github.io/blog/revealjs-r-tutorial/</link>
      <pubDate>Wed, 02 Sep 2020 18:00:00 -0500</pubDate>
      
      <guid>https://irhuru.github.io/blog/revealjs-r-tutorial/</guid>
      <description>I recently found out about an R package that allows you to create Reveal.js presentations in R using RMarkdown syntax. If you are like me and love to display cool graphs in your slides, don&amp;rsquo;t miss this short tutorial!
Why you need to start using Reveal.js in R Okay, so you already know how to use PowerPoint. Why using something different then? ðŸ¤” There are many reasons, actually, but one of them is that PowerPoint doesn&amp;rsquo;t allow you to display interactive graphs in your presentation.</description>
    </item>
    
    <item>
      <title>Blog posts coming soon!</title>
      <link>https://irhuru.github.io/blog/coming-soon/</link>
      <pubDate>Wed, 22 Jul 2020 11:04:06 -0500</pubDate>
      
      <guid>https://irhuru.github.io/blog/coming-soon/</guid>
      <description>I will start blogging very soon.</description>
    </item>
    
  </channel>
</rss>